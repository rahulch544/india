Why Go Lang ?
Infrastructure changed lot, 1. Multicore process 2. Cloud Infrastructure 3. Big Networking

Scalable & Distributed , dynamic, More Capacity

 requirement for GOLANG:

 1. To Support mulit threading 
 2. To prevent Concurrency
 3. Multiple users updating the same process

 Bulit In Concurrency Lang: C++, Java, GO Language
 Concurrency Mechanism is complex code and expesive and slow in c++ and Java code
 Concurrency Mechanism is cheap and easy in go and was designed to run on multiple cores.

 Main Use case:Performance, scalability application:

 Go Lang is like : Python readable syntax and performance like c++ 

 Go Lang is on backend language,

 Go Lang is fast at built and run time and requires less resource.
 Faster compliation. -> complies into single binary code file.
 

 Go Discovers erros at complie time

 Go indentifies infinite loops also


 Functions which needs to exported the first letter of fcn name should Capital,
 Similar to export variables they should be started with a capital letter 

 Package name of function to be be added in impot to use that function


3 Level scopes

Local Scope: Intiated Inside loops or function or blocks
Package Scope: declartion outside of loops or function
Global Scope: variables declared inside package with Captial letter at start.


go threads: thread
Green thread, is abstraction of an actual thead, 
managed by the go run time we are only interacting with thse high level goroutines., 
cheaper and lightweight, It does not affects performance,
with channels go can comminuncate between threads

Whereas Java theads:PerformanceManaged by kernal ,
 are hardware depenedent, cost of threads are hugher and higher start up time

